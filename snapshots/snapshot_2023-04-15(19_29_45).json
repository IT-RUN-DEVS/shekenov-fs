{
    "test/f_sys.py": {
        "1": "import os\n",
        "2": "from pathlib import Path\n",
        "3": "from zipfile import ZipFile\n",
        "4": "from datetime import date, datetime\n",
        "5": "\n",
        "6": "# функцию создания нового файла (create).\n",
        "7": "def create(name, text = None):\n",
        "8": "    while os.path.exists(name):\n",
        "9": "        name = input( 'Такой файл уже существует, введите другое имя файла:')\n",
        "10": "\n",
        "11": "    if text is not None:\n",
        "12": "        with open(name, 'w+') as f:\n",
        "13": "            f.write(text)\n",
        "14": "        print(f'Файл {name} успешно создан и в него добавлены данные: {text}')\n",
        "15": "    else:\n",
        "16": "        open(name, 'w+')\n",
        "17": "        print(f'Файл {name} успешно создан')\n",
        "18": "    return name\n",
        "19": "\n",
        "20": "\n",
        "21": "\n",
        "22": "# функцию вывода списка файлов и директорий (list).\n",
        "23": "def list(directory = None):\n",
        "24": "    if directory is not None:\n",
        "25": "        while not os.path.exists(directory):\n",
        "26": "            directory = input('Такой директории не существует, введите другую:')\n",
        "27": "    files = os.listdir(directory)\n",
        "28": "    # добавляем к названию директории \"/\", для удобства просмотра\n",
        "29": "    for i in range(len(files)):\n",
        "30": "        if os.path.isdir(files[i]):\n",
        "31": "            files[i] += '/'\n",
        "32": "    print(files)\n",
        "33": "    return  files\n",
        "34": "\n",
        "35": "\n",
        "36": "# функцию копирования файла (copy).\n",
        "37": "def copy(src, dst = None):\n",
        "38": "    same_files = []\n",
        "39": "    # если аргумент dst передан, сопоставляем его с другими файлами на одинаковые названия\n",
        "40": "    if dst is not None:\n",
        "41": "        if dst in os.listdir():\n",
        "42": "            dst = input('Файл с таким названием уже существует, введите другое название:')\n",
        "43": "        Path(dst).write_bytes(Path(src).read_bytes())\n",
        "44": "    # если аргумент не передан то копируем файл с исконным называние файла + \"копия_число\"\n",
        "45": "    else:\n",
        "46": "        pre_dst = src.split('.')[0]+'_копия_'\n",
        "47": "        for i in os.listdir(): # проверяем на совпадение части названий других файлов\n",
        "48": "            if os.path.isfile(i):\n",
        "49": "                if pre_dst in i:\n",
        "50": "                  same_files.append(i.split('.')[0]) # список из файлов с частично одинаковыми названиями\n",
        "51": "        numbers = []\n",
        "52": "        if same_files:\n",
        "53": "            for i in same_files:\n",
        "54": "                try:\n",
        "55": "                    numbers.append(int(i[len(pre_dst):])) # пытаемя получить цифру после частичного названия\n",
        "56": "                except:\n",
        "57": "                    continue\n",
        "58": "        if numbers:\n",
        "59": "            dst = pre_dst + str(max(numbers) + 1) + '.' +  src.split('.')[-1] # вытаскиваем максимально число после чатичного названия файлов и создаем новый файл с названием и цифрой большей на 1\n",
        "60": "        else:\n",
        "61": "            dst = pre_dst + '1' + '.' +  src.split('.')[-1] # если таковых нет, то создаем файл с название \"файл_копия_1.расширение\"\n",
        "62": "        Path(dst).write_bytes(Path(src).read_bytes())\n",
        "63": "    return dst\n",
        "64": "\n",
        "65": "\n",
        "66": "# функцию перемещения файла (move).\n",
        "67": "def move(src, dst = None):\n",
        "68": "    file_name = src.split('/')[-1] # название файла в src\n",
        "69": "    if dst and dst != ' ':\n",
        "70": "        directory = dst.split('/')\n",
        "71": "        # проверка на наличие названия файла в dst\n",
        "72": "        if '.' not in  directory[-1] or directory[-1] == '':\n",
        "73": "            directory = '/'.join(directory)\n",
        "74": "            if directory[-1] != '/':\n",
        "75": "                directory += '/'\n",
        "76": "        else:\n",
        "77": "            file_name = directory[-1] # название файла в dst\n",
        "78": "            directory[-1] = '' # оставляем только последовательность дирректорий\n",
        "79": "            directory = '/'.join(directory)\n",
        "80": "        # проверка на существования диреектории\n",
        "81": "        if os.path.exists(directory):\n",
        "82": "            os.rename(src, (directory + file_name))\n",
        "83": "        else:\n",
        "84": "            while not os.path.exists(directory):\n",
        "85": "                directory = input('Указанной директории не существует, попробуйте снова:')\n",
        "86": "            os.rename(src, (directory + file_name))\n",
        "87": "    # если dst не указан или равен \" \", то перемещаем его в директорию где запускается скрипт\n",
        "88": "    else:\n",
        "89": "        directory = os.path.abspath(os.curdir) + '/'\n",
        "90": "        os.rename(src, (directory + file_name))\n",
        "91": "\n",
        "92": "\n",
        "93": "# функцию инициализации новой файловой системы (init).\n",
        "94": "def init(directories):\n",
        "95": "    while os.path.exists(directories):\n",
        "96": "        directories = input('Такая файловая система уже существует, введите другую:')\n",
        "97": "    os.makedirs(directories)\n",
        "98": "\n",
        "99": "\n",
        "100": "# функцию создания снимка файловой системы (snapshot).\n",
        "101": "def snapshot(directories):\n",
        "102": "    snap_name = 'snapshot_' + f'{date.today()}({datetime.now().hour}_{datetime.now().minute})'\n",
        "103": "    while not os.path.exists(directories):\n",
        "104": "        directories = input('Такой файловой системы не существует, попробуйте еще раз:')\n",
        "105": "    snap = {}\n",
        "106": "    for each in list(directories):\n",
        "107": "        if os.path.isfile(each):\n",
        "108": "            file = open(each, 'r')\n",
        "109": "            l_n = 1\n",
        "110": "            for line in file:\n",
        "111": "                snap[each][l_n] = line\n",
        "112": "                l_n += 1\n",
        "113": "    new_snapshot = create(snap_name, snap)\n",
        "114": "    move(new_snapshot, 'snapshots/')\n",
        "115": "\n",
        "116": "\n",
        "117": "\n",
        "118": "\n",
        "119": "# функцию создания резервной копии всей файловой системы (backup).\n",
        "120": "def backup(directories):\n",
        "121": "    # Проверка на существование файловой системы\n",
        "122": "    while not os.path.exists(directories):\n",
        "123": "        directories = input('Такой директории не существует, выберите другую:')\n",
        "124": "\n",
        "125": "    # Создаем архив дирректории\n",
        "126": "    backup_name = input('Введите название резервной копии:') + '.zip'\n",
        "127": "    while backup_name in list('backups/'):\n",
        "128": "        backup_name = input('Бекап с таким именем уже существует, придумайте другой:') + '.zip'\n",
        "129": "    with ZipFile(backup_name, \"w\") as myzip:\n",
        "130": "        myzip.write(directories)\n",
        "131": "    # Перемещаем бекап в папку backups\n",
        "132": "    move(backup_name, 'backups/')\n",
        "133": "    print(f\"Бекап '{backup_name}' успешно создан, и перемещен в папку 'backups/'\")\n",
        "134": "\n",
        "135": "\n",
        "136": "\n",
        "137": "\n",
        "138": "\n",
        "139": "\n",
        "140": "\n",
        "141": "\n",
        "142": "\n",
        "143": "\n",
        "144": "\n",
        "145": "\n",
        "146": "snapshot('test/')\n",
        "147": "# backup('test')\n",
        "148": "# create('hello.txt')\n",
        "149": "# list()\n",
        "150": "# copy('', 'backup',)\n",
        "151": "# move('test/test_2/hello_опия_2.txt','')\n",
        "152": "# move('hello_копия_3.txt', 'test/test_2/index.txt')\n",
        "153": "# init('file/file1/file3')\n",
        "154": "# {\"test1234\":\n",
        "155": "#      {\"95\": \"# create('hello.txt')\"}}\n"
    },
    "test/asdf.txt": {},
    "test/test1/tesadf.txt": {}
}